{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hi there!","text":"<p>I created this website to document my journey from software engineering into AI. I hope that readers who are looking for practical advice, career inspiration, or just a fresh perspective will find something interesting and useful among the stories and learnings I write about.</p> <p>Jump straight to my latest posts here, or check out the categories in the sidebar for more specific topics.</p>","tags":["AI Journey","Software Engineering","Career Development","AI Insights","Tech Blogging"]},{"location":"#newsletter","title":"Newsletter","text":"<p>To stay in the loop, subscribe to my newsletter, which I use to send summaries of new posts no more than once per month.  </p> <p> Subscribe to my Newsletter</p>","tags":["AI Journey","Software Engineering","Career Development","AI Insights","Tech Blogging"]},{"location":"#socials","title":"Socials","text":"<p>You can connect and follow me on  Twitter and  GitHub to always see the latest updates. I do have a  LinkedIn profile, but I'm not very active there. If you want to connect, please send me a message on .</p>","tags":["AI Journey","Software Engineering","Career Development","AI Insights","Tech Blogging"]},{"location":"user-manual/","title":"A Guide to Working with Me","text":"<p>Welcome! This guide is meant to help us work together more effectively by sharing my preferences and work style. While it may seem formal, think of it as a friendly \"user manual\" that can help reduce misunderstandings and make our collaboration smoother. These aren't rigid rules - they're simply patterns I've found helpful throughout my career. Feel free to use this as a starting point for discussion, and know that I'm always open to adapting based on what works best for us team.</p>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#about-me","title":"About Me","text":"<ul> <li>Location: Originally from Germany, currently based in the UK/EU.</li> <li>Professional Background: Experienced in backend software engineering (ex-Reddit), data science, and data engineering, with a focus on information retrieval (search) and building distributed, data-intensive applications and platforms.</li> <li>What Drives Me: I thrive on interesting challenges and love working with bright, motivated colleagues who share a passion for problem-solving and growth.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#collaboration-style","title":"Collaboration Style","text":"<p>Teamwork is like team sports: In basketball, everyone has a specific skill and plays a specific position (sometimes multiple), and when the moment requires it, we give each other assists to win as a team.</p>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#preferred-communication","title":"Preferred Communication","text":"<ul> <li>Verbal or direct messages (DMs).</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#collaboration-values","title":"Collaboration Values","text":"<ul> <li>Genuine interest in completing work together.</li> <li>Ensuring everyone feels useful, and their contributions are valued.</li> <li>A focus on tasks, with teamwork driven by mission and learning, not ego.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#decision-making","title":"Decision-Making","text":"<p>I like to think my decisions are very rational and data-driven, but I also know when to deviate from that and let intuition lead the way.</p> <ul> <li>Analytical Decisions: Data-driven (for defensibility); if data is lacking, use experience as a proxy.</li> <li>Social Decisions: Guided by intuition, but rationalised with experiences, especially for decisions that affect if and how we work together.</li> <li>Getting Buy-In: Engineering is collaborative enterprise, being a hero engineer only gets you so far (trust me I've been there). That is why I prefer a collaborative approach that leads to not only more informed decisions but also to a buy-in from the majority of the participants.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#interaction-style","title":"Interaction Style","text":"<ul> <li>Formal when needed.</li> <li>Always respectful, outcome-focused, and intentional. I often like to understand the why and intention behind what we are trying to achieve. If you find me probing for a reason, it is not because I have doubts. It is because understanding the reason helps me to map different paths to the goal.</li> <li>When I am not in focused mode, I like talking about ideas and challenges. Despite being German, I love a good laugh too! Not all chats have to mean business.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#meeting-preferences","title":"Meeting Preferences","text":"<ul> <li>Clear purpose and agenda required beforehand.</li> <li>Meetings should always have outcome intentions.</li> <li>I prefer no meetings before lunch to focus deeply on my work.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#a-typical-workday","title":"A typical Workday","text":"<p>This is my typical routine. While not set in stone, these are some of the pattern that worked well in the past for me.</p> <ul> <li>Mornings: Focused, using the Pomodoro technique with noise-cancelling headphones. Unless it is urgent, please send a DM and allow me to respond asynchronously.</li> <li>Pre-lunch: I catch up on emails and messages.</li> <li>Around Lunchtime: I'm open to socialising and chatting. Connecting with others energises me and sparks new ideas. Many of my side projects at work got started this way.</li> <li>Afternoons: Great for meetings, asking for my help, or brainstorming ideas.   \u2800</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#as-a-leadmanager","title":"As a Lead/Manager","text":"<p>A team is like a fist; it is only as strong as the individual fingers that hold together. \u2014 Karin S.</p> <ul> <li>I'll shield the team from outside pressure, and we'll tackle challenges as a team together.</li> <li>I'm fine with silliness and fun at work as long as our tasks are completed by us. Some of my most enjoyable moments in my career involved playing pranks on our line manager while delivering a distributed search and storage backend across thousands of servers in a dozen data centres, managing 100 petabytes of data.</li> <li>Enjoy your work, and show what you can do.</li> <li>I prioritise understanding errors in context rather than attributing them to personal traits (lookup \"Fundamental Attribution Error\"). I care about how you learn from mistakes to grow.</li> <li>I understand that people have different preferences, personalities, and quirks. And sometimes people simply just don't like each other. If you have a work conflict, I'll encourage you and the other party to talk it out and negotiate a win-win solution.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#feedback","title":"Feedback","text":"","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#how-i-give-feedback","title":"How I Give Feedback","text":"<ul> <li>Positive Feedback: Delivered promptly and publicly (or privately if we have rapport) \u2014 always genuine, never forced.</li> <li>Constructive Feedback: Discussed privately, focusing on problem-solving. I might ask, \"What do you think we need to do to fix X?\" to encourage solutions rather than dwell on mistakes. I'm there to assist you in resolving issues.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#how-id-like-to-receive-feedback","title":"How I'd Like to Receive Feedback","text":"<ul> <li>Genuine, verbal, informal, and timely \u2014 focused on actionable steps for personal or professional growth.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#what-i-find-most-helpful-or-challenging-to-deal-with","title":"What I Find Most Helpful or Challenging to Deal With","text":"<p>The easiest way to become a 10x engineer is to help five 1x engineers become 2x engineers.</p>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#most-helpful","title":"Most Helpful","text":"<ul> <li>Being yourself and sharing positivity makes it easy to approach and appreciate you.</li> <li>Communicating clearly with relevant information (+updates and successes).</li> <li>Meetings with agendas and actionable outcomes.</li> <li>When I need help, show me how to help myself next time.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"user-manual/#most-challenging","title":"Most Challenging","text":"<ul> <li>People who are gatekeeping / arrogant / dismissive.</li> <li>People who only take but don't give.</li> <li>People who focus only on the negative.</li> <li>Non-technical managers with zero experience.</li> </ul>","tags":["collaboration","teamwork","leadership","feedback","communication"]},{"location":"reading/book-club/","title":"DS/ML Book Club","text":"<p>If you like to read books and discuss them with others, I can recommend the free Data Science and Machine Learning Book Club. Each Month, the community votes on a book for members to read and discuss asynchronously on Discord. Often, there is an interesting live post-reading discussion with the authors on YouTube.</p> <p>Some of the past readings made it into my reading list.</p>","tags":["Data Science","Machine Learning","Book Club","Discord Community","Reading Lists"]},{"location":"reading/books/","title":"Books","text":"<p>A journey into a career in AI/ML is not complete without the support of great books. Here are the ones I've selected to read. Checkout the DS/ML Book Club for more recommendations.</p>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#currently-reading","title":"Currently reading","text":"<ul> <li>Writing for Developers by Piotr Sarna and Cynthia Dunlop, November 2024.   ISBN 9781633436282  \u21e8  Manning Publications.</li> </ul>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#my-backlog","title":"My backlog","text":"","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#interview-preparation","title":"Interview preparation","text":"<ul> <li>Ace the Data Science Interview 201 Real Interview Questions Asked by FAANG, Tech Startups, &amp; Wall Street, by Kevin Huo and Nick Singh, August 2021.   ISBN: 978-0578973838 \u21e8  Google Books</li> </ul>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#machine-learning","title":"Machine Learning","text":"<ul> <li>Machine Learning Engineering in Action, Ben Wilson, March 2022.   ISBN 9781617298714 \u21e8  Manning Publications.</li> </ul>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#machine-learning-systems","title":"Machine Learning Systems","text":"<ul> <li> <p>Designing Machine Learning Systems An Iterative Process for Production-Ready Applications, by Chip Huyen, May 2022.   ISBN 9781098107963 \u21e8 O'Reilly Media.</p> </li> <li> <p>AI Engineering Building Applications with Foundation Models, by Chip Huyen, December 2024.   ISBN 9781098166304 \u21e8 O'Reilly Media.</p> </li> </ul>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"reading/books/#leadership-and-career","title":"Leadership and Career","text":"<ul> <li> <p>Build a Career in Data Science, by Emily Robinson and Jacqueline Nolis, March 2020.     ISBN 9781617296246 \u21e8 Manning Publications.</p> </li> <li> <p>How to Lead in Data Science, by Jike Chong and Yue Cathy Chang, November 2021.   ISBN 9781617298899 \u21e8 Manning Publications.</p> </li> <li> <p>Managing Machine Learning Projects, by Simon Thompson, March 2023.   ISBN 9781633439023 \u21e8 Manning Publications.</p> </li> <li> <p>Lead Developer Career Guide, by Shelley Benhoff, October 2024.   ISBN 9781633438071 \u21e8  Manning Publications.</p> </li> </ul>","tags":["AI","MachineLearning","CareerDevelopment","DataScience","BookRecommendations"]},{"location":"writing/","title":"Blog","text":"<p>I mainly write about learnings, challenges and projects that I encounter during my transition from software engineering to AI. Due to my background is in software engineering, you will also find articles that focus on system design and technical leadership.</p>","tags":["AI","Software Engineering","System Design","Technical Leadership","Blog"]},{"location":"writing/#newsletter","title":"Newsletter","text":"<p>To stay in the loop, subscribe to my newsletter which I use to send summaries of new posts no more than once per month.  </p> <p> Subscribe to my Newsletter</p>","tags":["AI","Software Engineering","System Design","Technical Leadership","Blog"]},{"location":"writing/#interviews","title":"Interviews","text":"<ul> <li> Interview: Working with an SRE</li> </ul>","tags":["AI","Software Engineering","System Design","Technical Leadership","Blog"]},{"location":"writing/#system-design","title":"System Design","text":"<ul> <li> How to Choose Tech for Production: The Default Heuristic</li> </ul>","tags":["AI","Software Engineering","System Design","Technical Leadership","Blog"]},{"location":"writing/2025/02/01/the-default-heuristic/","title":"How to Choose Tech for Production: The Default Heuristic","text":"","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#introduction","title":"Introduction","text":"<p>During my time as a lead data engineer to build a predictive maintenance platform I came across the concept of the default heuristic. One of my tasks was to identify platform components that would allow us to scale storage and retrieval of time series sensory data to petabytes, while still being able to support critical use cases of data scientists as well as analytical reporting.</p> <p>I am not the first one to tell you that from a developer perspective using the latest cutting edge tech for the job seems like a great idea. After all, new tech usually looks great on paper, and is fun to learn and experiment with. However, for production systems that require long-term stability, maintainability, and reliability, the smarter choice often lies in opting for established, proven solutions. This approach is choosing the \"Default Heuristic\".</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#understanding-the-optimization-fallacy","title":"Understanding the Optimization Fallacy","text":"<p>The Optimization Fallacy refers to the misguided pursuit of the \"perfect\" or \"optimal\" solution, often at the expense of time, resources, and clarity. Developers are particularly susceptible due to their innate curiosity and love for problem-solving.</p> <p>Why it happens:</p> <ul> <li>Excessive Tinkering: The thrill of exploring cutting-edge tools.</li> <li>Delusion of Discoverability: Believing the best option will reveal itself with exhaustive research and trials.</li> <li>Premature Optimization: Attempting to solve problems that haven't yet occurred.</li> </ul> <p>The fallacy: This relentless chase can delay progress, inflate costs, and introduce unnecessary complexity instead of identifying the optimal solution for the use-case.</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#the-default-heuristic","title":"The Default Heuristic","text":"<p>The Default Heuristic on the other hand is a decision-making strategy that prioritizes established, reliable choices over the pursuit of novel or untested alternatives. It is particularly beneficial when:</p> <ol> <li>Costs of New Information are High: Researching and testing new tools consumes time and resources (e.g., extensive benchmarks for five different databases, redesigning a pipeline to work with an unproven tool, or rewriting major parts of an application to fit a new framework).</li> <li>Consequences of Deviation are Low: The safe, default choice is unlikely to lead to catastrophic outcomes (e.g., sticking with REST APIs rather than trying GraphQL for the first time).</li> <li>Variability in Outcomes is Minimal: The range of potential results from using the default is narrow and predictable (e.g., using AWS S3 for object storage rather than testing a newer, less mature cloud storage service).</li> </ol>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#real-world-examples","title":"Real world examples","text":"","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#how-pinterest-scaled-from-0-to-10s-of-billions-of-page-views-per-month","title":"How pinterest scaled from 0 to 10s of billions of page views per month","text":"<p>Pinterest's system design evolution is a great example of the efficacy of the Default Heuristic in decision-making. Initially, during their rapid growth phase, Pinterest integrated a variety of - at that time - cutting-edge technologies, including Cassandra and MongoDB, in an attempt to manage their expanding infrastructure. However, this approach led to increased complexity and system failures. Pinterest recognized these challenges and shifted focus to mature, reliable technologies such as MySQL, Solr, Memcache, and Redis. This strategic pivot allowed them to scale effectively by adding more of the same components, thereby simplifying their architecture and enhancing system stability.</p> <p>This case illustrates the pitfalls of the Optimization Fallacy-pursuing novel solutions without fully considering the associated costs and complexities. By using the Default Heuristic, they reduced avoided unnecessary experimentation with unproven tools, and employed established technologies that offered predictable performance and robust community support. Their decision minimized the risks associated with excessive tinkering and premature optimization, ultimately contributing to their successful scaling and operational efficiency. [1]</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#stackoverflow-update-560m-pageviews-a-month-25-servers-and-its-all-about-performance","title":"StackOverflow Update: 560M Pageviews a Month, 25 Servers, and It's All About Performance","text":"<p>Overflow's infrastructure strategy is another example of the application of the Default Heuristic. By favoring established, reliable technologies such as Microsoft IIS for web servers and MS SQL for database management, they ensured system stability and performance. Additionally, they pragmatically incorporated Linux-based solutions like HAProxy for load balancing and Redis for caching where appropriate. In my opinion this shows a balanced approach to technology selection. The deliberate choice to utilize proven technologies, instead of pursuing novel or untested alternatives, has Default Heuristic written all over it. And by doing that they got reliability and predictability in their system design. [2]</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#conclusion","title":"Conclusion","text":"<p>SQL Databases seem to be a common theme in the above examples, but you get the idea. There is a default heuristic for many areas of tech: Programming languages, Webframeworks, CD/CI SAAS, Data Storage, Project management tools, the list goes on. To summarize:</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#when-to-use-the-default-heuristic","title":"When to Use the Default Heuristic","text":"<ol> <li>Resource-Constrained Projects: Limited budgets and tight deadlines benefit from predictable outcomes (e.g., using JavaScript with Node.js for a web application rather than experimenting with a newer runtime like Deno).</li> <li>Critical Applications: Reliability outweighs innovation in high-stakes environments (e.g., choosing Python over a niche language for a healthcare application requiring heavy compliance with legal standards).</li> <li>Rapid Scaling: When scaling a system, adopting a well-documented technology eases the learning curve (e.g., opting for Kubernetes over a less established container orchestration platform).</li> <li>Unclear Long-Term Requirements: Opting for a default allows flexibility as needs evolve (e.g., choosing PostgreSQL over a specialized database when future workloads are uncertain).</li> </ol>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#why-use-the-default-heuristic","title":"Why Use the Default Heuristic?","text":"<ul> <li>Proven Reliability: Battle-tested solutions are trusted by a broader community.</li> <li>Rich Ecosystem: Established tools offer extensive documentation, community support, and real-world use cases.</li> <li>Talent Availability: It\u2019s easier to find skilled professionals experienced with widely adopted technologies.</li> <li>Risk Reduction: Sticking with the familiar reduces operational uncertainty.</li> </ul>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#how-to-balance-exploration-and-defaults","title":"How to Balance Exploration and Defaults","text":"<p>If you have capacity and talent to experiment with new tech, you should aim to:</p> <ul> <li>Reserve Defaults for Production: Use proven tech for core systems where failure is costly.</li> <li>Experiment in Sandboxes: Explore new tools in isolated environments without risking operational stability.</li> <li>Debias Decision-Making: Acknowledge cognitive biases, like the Optimization Fallacy, and prioritize pragmatism.</li> </ul>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#tldr","title":"TLDR","text":"<p>Use the default heuristic to:</p> <ol> <li>Prioritize Stability: Choose technologies with a track record of reliability for critical systems.</li> <li>Minimize Risks: Avoid falling for the Optimization Fallacy by relying on well-understood solutions.</li> <li>Leverage The Community: Established tools have extensive support networks, reducing implementation and troubleshooting costs.</li> </ol> <p>By embracing the Default Heuristic, you balance innovation with stability. Let the safe, predictable defaults power your production systems, and channel your curiosity and creativity into exploratory projects where the stakes are lower.</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/02/01/the-default-heuristic/#references","title":"References","text":"<p>[1] Y. Nelapati and M. Weiner, \"Scaling Pinterest - From 0 to 10s of Billions of Page Views a Month in Two Years,\" High Scalability, Apr. 15, 2013. www.highscalability.com</p> <p>[2] M. Cecconi and N. Craver, \"StackOverflow Update: 560M Pageviews a Month, 25 Servers, and It's All About Performance,\" High Scalability, Jul. 21, 2014. www.highscalability.com</p>","tags":["Default Heuristic","Tech Selection","Software Engineering","Production Systems","Optimization Fallacy"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/","title":"Interview Series: Working with an SRE","text":"","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#preamble","title":"Preamble","text":"<p>In this insightful interview, Paul B\u00fctow, a Principal Site Reliability Engineer at Mimecast, shares over a decade of experience in the field. Paul highlights the role of an Embedded SRE, emphasizing the importance of automation, observability, and effective incident management. We also focused on the key question of how you can work effectively with an SRE weather you are an individual contributor or a manager, a software engineer or data scientist. And how you can learn more about site reliability engineering.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#introducing-paul","title":"Introducing Paul","text":"<p>Hi Paul, please introduce yourself briefly to the audience. Who are you, what do you do for a living, and where do you work?</p> <p>My name is Paul B\u00fctow, I work at Mimecast, and I\u2019m a Principal Site Reliability Engineer there. I\u2019ve been with Mimecast for almost ten years now. The company specializes in email security, including things like archiving, phishing detection, malware protection, and spam filtering.</p> <p>You mentioned that you\u2019re an \u2018Embedded SRE.\u2019 What does that mean exactly?</p> <p>It means that I\u2019m directly part of the software engineering team, not in a separate Ops department. I ensure that nothing is deployed manually, and everything runs through automation. I also set up monitoring and observability. These are two distinct aspects: monitoring alerts us when something breaks, while observability helps us identify trends. I also create runbooks so we know what to do when specific incidents occur frequently.</p> <p>Infrastructure SREs on the other hand handle the foundational setup, like providing the Kubernetes cluster itself or ensuring the operating systems are installed. They don't work on the application directly but ensure the base infrastructure is there for others to use. This works well when a company has multiple teams that need shared infrastructure.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#how-did-you-get-started","title":"How did you get started?","text":"<p>How did your interest in Linux or FreeBSD start?</p> <p>It began during my school days. We had a PC with DOS at home, and I eventually bought Suse Linux 5.3. Shortly after, I discovered FreeBSD because I liked its handbook so much. I wanted to understand exactly how everything worked, so I also tried Linux from Scratch. That involves installing every package manually to gain a better understanding of operating systems.</p> <p>And after school, you pursued computer science, correct?</p> <p>Exactly. I wasn\u2019t sure at first whether I wanted to be a software developer or a system administrator. I applied for both and eventually accepted an offer as a Linux system administrator. This was before 'SRE' became a buzzword, but much of what I did back then-automation, infrastructure as code, monitoring-is now considered part of the typical SRE role.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#roles-and-career-progression","title":"Roles and Career Progression","text":"<p>Tell us about how you joined Mimecast. When did you fully embrace the SRE role?</p> <p>I started as a Linux sysadmin at 1&amp;1. I managed an ad server farm with hundreds of systems and later handled load balancers. Together with an architect, we managed F5 load balancers distributing around 2,000 services, including for portals like web.de and GMX. I also led the operations team technically for a while before moving to London to join Mimecast.</p> <p>At Mimecast, the job title was explicitly 'Site Reliability Engineer.' The biggest difference was that I was no longer in a separate Ops department but embedded directly within the storage and search backend team. I loved that because we could plan features together-from automation to measurability and observability. Mimecast also operates thousands of physical servers for email archiving, which was fascinating since I already had experience with large distributed systems at 1&amp;1. It was the right step for me because it allowed me to work close to the code while remaining hands-on with infrastructure.</p> <p>What are the differences between SRE, DevOps, SysAdmin, and Architects?</p> <p>SREs are like the next step after SysAdmins. A SysAdmin might manually install servers, replace disks, or use simple scripts for automation, while SREs use infrastructure as code and focus on reliability through SLIs, SLOs, and automation. DevOps isn\u2019t really a job-it\u2019s more of a way of working, where developers are involved in operations tasks like setting up CI/CD pipelines. Architects focus on designing systems and infrastructures, such as load balancers or distributed systems, working alongside SREs to ensure the systems meet the reliability and scalability requirements. The specific responsibilities of each role depend on the company, and there is often overlap. </p> <p>What are the most important reliability lessons you\u2019ve learned so far?</p> <p>Don\u2019t leave SRE aspects as an afterthought. It\u2019s much better to discuss automation, monitoring, SLIs, and SLOs early on. Traditional sysadmins often installed systems manually, but today, we do everything via infrastructure as code-using tools like Terraform or Puppet. I also distinguish between monitoring and observability. Monitoring tells us, 'The server is down, alarm!' Observability dives deeper, showing trends like increasing latency so we can act proactively. SLI, SLO, and SLA are core elements. We focus on what users actually experience-for example, how quickly an email is sent-and set our goals accordingly. Runbooks are also crucial. When something goes wrong at night, you don\u2019t want to start from scratch. A runbook outlines how to debug and resolve specific problems, saving time and reducing downtime.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#anecdotes-and-best-practices","title":"Anecdotes and Best Practices","text":"<p>Runbooks sound very practical. Can you explain how they\u2019re used day-to-day?</p> <p>Runbooks are essentially guides for handling specific incidents. For instance, if a service won\u2019t start, the runbook will specify where the logs are and which commands to use. Observability takes it a step further, helping us spot changes early-like rising error rates or latency-so we can address issues before they escalate.</p> <p>When should you decide to put something into a runbook, and when is it unnecessary?</p> <p>If an issue happens frequently, it should be documented in a runbook so that anyone, even someone new, can follow the steps to fix it. The idea is that 90% of the common incidents should be covered. For example, if a service is down, the runbook would specify where to find logs, which commands to check, and what actions to take. On the other hand, rare or complex issues, where the resolution depends heavily on context or varies each time, don\u2019t make sense to include in detail. For those, it\u2019s better to focus on general troubleshooting steps. </p> <p>How do you search for and find the correct runbooks?</p> <p>Runbooks should be linked directly in the alert you receive. For example, if you get an alert about a service not running, the alert will have a link to the runbook that tells you what to check, like logs or commands to run. Runbooks are best stored in an internal wiki, so if you don\u2019t find the link in the alert, you know where to search. The important thing is that runbooks are easy to find and up to date because that\u2019s what makes them useful during incidents. </p> <p>Do you have an interesting war story you can share with us?</p> <p>Sure. At 1&amp;1, we had a proprietary ad server software that ran a SQL query during startup. The query got slower over time, eventually timing out and preventing the server from starting. Since we couldn\u2019t access the source code, we searched the binary for the SQL and patched it. By pinpointing the issue, a developer was able to adjust the SQL. This collaboration between sysadmin and developer perspectives highlights the value of SRE work.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#working-with-different-teams","title":"Working with Different Teams","text":"<p>You\u2019re embedded in a team-how does collaboration with developers work practically?</p> <p>We plan everything together from the start. If there\u2019s a new feature, we discuss infrastructure, automated deployments, and monitoring right away. Developers are experts in the code, and I bring the infrastructure expertise. This avoids unpleasant surprises before going live.</p> <p>How about working with data scientists or ML engineers? Are there differences?</p> <p>The principles are the same. ML models also need to be deployed and monitored. You deal with monitoring, resource allocation, and identifying performance drops. Whether it\u2019s a microservice or an ML job, at the end of the day, it\u2019s all running on servers or clusters that must remain stable.</p> <p>What about working with managers or the FinOps team?</p> <p>We often discuss costs, especially in the cloud, where scaling up resources is easy. It\u2019s crucial to know our metrics: do we have enough capacity? Do we need all instances? Or is the CPU only at 5% utilization? This data helps managers decide whether the budget is sufficient or if optimizations are needed.</p> <p>Do you have practical tips for working with SREs?</p> <p>Yes, I have a few:</p> <ol> <li>Early involvement: Include SREs from the beginning in your project.</li> <li>Runbooks &amp; documentation: Document recurring errors.</li> <li>Try first: Try to understand the issue yourself before immediately asking the SRE.</li> <li>Basic infra knowledge: Kubernetes and Terraform aren\u2019t magic. Some basic understanding helps every developer.</li> </ol>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#using-ai-tools","title":"Using AI Tools","text":"<p>Let\u2019s talk about AI. How do you use it in your daily work?</p> <p>For boilerplate code, like Terraform snippets, I often use ChatGPT. It saves time, although I always review and adjust the output. Log analysis is another exciting application. Instead of manually going through millions of lines, AI can summarize key outliers or errors.</p> <p>Do you think AI could largely replace SREs or significantly change the role?</p> <p>I see AI as an additional tool. SRE requires a deep understanding of how distributed systems work internally. While AI can assist with routine tasks or quickly detect anomalies, human expertise is indispensable for complex issues.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#sre-learning-resources","title":"SRE Learning Resources","text":"<p>What resources would you recommend for learning about SRE?</p> <p>The Google SRE book is a classic, though a bit dry. I really like 'Seeking SRE,' as it offers various perspectives on SRE, with many practical stories from different companies.</p> <p>Do you have a podcast recommendation?</p> <p>The Google SRE prodcast is quite interesting. It offers insights into how Google approaches SRE, along with perspectives from external guests.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#blogging","title":"Blogging","text":"<p>You also have a blog. What motivates you to write regularly?</p> <p>Writing helps me learn the most. It also serves as a personal reference. Sometimes I look up how I solved a problem a year ago. And of course, others tackling similar projects might find inspiration in my posts.</p> <p>What do you blog about?</p> <p>Mostly technical topics I find exciting, like homelab projects, Kubernetes, or book summaries on IT and productivity. It\u2019s a personal blog, so I write about what I enjoy.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#wrap-up","title":"Wrap-up","text":"<p>To wrap up, what are three things every team should keep in mind for stability?</p> <p>First, maintain runbooks and documentation to avoid chaos at night. Second, automate everything-manual installs in production are risky. Third, define SLIs, SLOs, and SLAs early so everyone knows what we\u2019re monitoring and guaranteeing.</p> <p>Is there a motto or mindset that particularly inspires you as an SRE?</p> <p>\"Keep it simple and stupid\"-KISS. Not everything has to be overly complex. And always stay curious. I\u2019m still fascinated by how systems work under the hood.</p> <p>Where can people find you online?</p> <p>You can find links to my socials on my website paul.buetow.org. I regularly post articles and link to everything else I\u2019m working on outside of work.</p> <p>Thank you very much for your time and this insightful interview into the world of site reliability engineering</p> <p>My pleasure, this was fun.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#closing-comments","title":"Closing comments","text":"<p>Dear reader, I hope this conversation with Paul B\u00fctow provided an exciting peak into the world of Site Reliability Engineering. Whether you\u2019re a software developer, data scientist, ML engineer, or manager, reliable systems are always a team effort. Hopefully, you\u2019ve taken some insights or tips from Paul\u2019s experiences for your own team or next project. Thanks for joining us, and best of luck refining your own SRE practices!</p> <p>All content comes directly from the recorded conversation and reflects Paul\u2019s personal experiences and views.</p>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/2025/01/12/working-with-an-sre-interview/#links-and-resources","title":"Links and Resources","text":"<ul> <li>Paul's Website: https://paul.buetow.org</li> <li> <p>Paul's Blog: https://foo.zone</p> </li> <li> <p>The Google SRE Book: https://sre.google/books/</p> </li> <li>Seeking SRE Book: https://www.oreilly.com/library/view/seeking-sre/9781491978856/</li> <li>SRE Prodcast: https://sre.google/prodcast/</li> <li>LFS Linux https://linuxfromscratch.org</li> </ul>","tags":["Site Reliability Engineering","SRE","DevOps","Automation","Incident Management"]},{"location":"writing/archive/2025/","title":"2025","text":""},{"location":"writing/category/software-engineering/","title":"Software Engineering","text":""}]}